name: Tag, Build, and Release

on:
 push:
   branches:
     - test-deploy
   tags:
     - "*"
 workflow_dispatch:

jobs:
  apk:
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
      - name: setup java11
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '11'
      - name: Call wrapper task
        run: gradle wrapper
      - name: Set execution flag for gradlew
        run: chmod +x ./gradlew
      - name: Build APK
        run: bash ./gradlew assembleDebug --stacktrace
      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
          name: apk
          path: app/build/outputs/apk/debug/app-debug.apk
          
      - name: Bump version and push tag if necessary
        id: auto_tag
        if: github.ref_type != 'tag'
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          WITH_V: true
      - name: Set tag name as the newly created tag
        if: github.ref_type != 'tag'
        run: |
          TAG_NAME="${{ steps.auto_tag.output.new_tag }}"
          echo $TAG_NAME
          echo "TAG_NAME=${TAG_NAME}" >> GITHUB_REF
      - name: Set tag name as the already created tag
        if: github.ref_type == 'tag'
        run: |
          TAG_NAME=$GITHUB_REF##"
          echo $TAG_NAME
          echo "TAG_NAME=${TAG_NAME}" >> GITHUB_REF

  release:
    name: Release APK
    needs: apk
    runs-on: ubuntu-latest
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: apk
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: $TAG_NAME
          release_name: My Party Album $TAG_NAME
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apk/app-debug.apk
          asset_name: mpa.apk
          asset_content_type: application/zip
